@page "/login"


<h1>Login</h1>

<form @onsubmit="SubmitLoginForm">
    <div class="form-group">
        <label for="username">Username or Email</label>
        <input type="text" class="form-control" id="username" @bind="username" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" @bind="password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</form>

@if (!string.IsNullOrEmpty(loginError))
{
    <div class="alert alert-danger">
        @loginError
    </div>
}

@code {
    private string username = "aghamoeez@gmail.com";
    private string password = "Sabina5800@@@@";
    private string loginError;
    private Training102.BAL.SharedModel.UserManagerResponse userManager;

    [Inject]
    private AuthenticationService authService { get; set; }

    private async Task SubmitLoginForm()
    {
        userManager = await authService.LoginAsync(username, password);

        if (userManager.IsSuccessful)
        {
           // var tokenResponse = await jwtToken.con
            // Authentication successful, you can now store and use the JWT token as needed
            // For example, you can use the token to make authenticated API requests
            // Remember to securely store and handle the token
            // Then, navigate to a protected page or perform other actions
        }
        else
        {
            loginError = "Login failed. Please check your credentials.";
        }
    }
}
